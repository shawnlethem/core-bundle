resources:
    VideoGamesRecords\CoreBundle\Entity\Chart:
        subresourceOperations:
            api_groups_charts_get_subresource:
                method: 'GET'
                normalization_context: {'groups': [chart.list]}
        collectionOperations:
            get:
                normalization_context: {'groups': [chart.list], 'enable_max_depth':true}
            with-player-chart:
                method: 'GET'
                normalization_context: {'groups': [chart.read, chart.group, group.read.mini, chart.libs, chartLib.read, chart.playerCharts, playerChart.read, playerChart.chart, playerChart.player, playerChart.libs, playerChart.status, playerChartStatus.read, playerChart.platform], 'enable_max_depth':true}
                access_control: 'is_granted("ROLE_PLAYER")'
                path: '/charts/with-player-chart'
                swagger_context:
                    parameters:
                        - name: id
                          in: path
                          required: true
                          type: integer
                        - name: idGame
                          in: query
                          required: false
                          type: integer
                        - name: idGroup
                          in: query
                          required: false
                          type: integer
                        - name: idChart
                          in: query
                          required: false
                          type: integer
                        - name: libChart
                          in: query
                          required: false
                          type: string
                controller: 'VideoGamesRecords\CoreBundle\Controller\ChartController::charts'
        itemOperations:
            get:
                normalization_context: {'groups': [chart.read, chart.libs, chartLib.read]}
            team-ranking:
                method: 'GET'
                normalization_context: {'groups': [teamChart.pointChart, teamChart.team, team.read.mini]}
                path: '/charts/{id}/team-ranking'
                swagger_context:
                    parameters:
                        - name: id
                          in: path
                          required: true
                          type: integer
                        - name: maxRank
                          in: query
                          required: false
                          type: integer
                controller: 'VideoGamesRecords\CoreBundle\Controller\ChartController::teamRanking'
            player-ranking:
                method: 'GET'
                normalization_context: {'groups': [
                        playerChart.ranking,
                        playerChart.player,
                        playerChart.platform,
                        platform.read.mini,
                        player.read.mini,
                        playerChart.status,
                        playerChartStatus.read,
                        player.team,
                        team.read.mini,
                        player.country,
                        player.country.read,
                        proof.read,
                        picture.read,
                        video.read
                ]}
                path: '/charts/{id}/player-ranking'
                swagger_context:
                    summary: 'Retrive ranking of a chart'
                controller: 'VideoGamesRecords\CoreBundle\Controller\ChartController::playerRanking'
                defaults:
                    _api_receive: false
            player-ranking-points:
                method: 'GET'
                normalization_context: {'groups': [playerChart.pointChart,playerChart.player,player.read.mini,player.team,team.read.mini,player.country,player.country.read]}
                path: '/charts/{id}/player-ranking-points'
                swagger_context:
                    parameters:
                        -   name: id
                            in: path
                            required: true
                            type: integer
                        -   name: maxRank
                            in: query
                            required: false
                            type: integer
                controller: 'VideoGamesRecords\CoreBundle\Controller\ChartController::playerRankingPoints'