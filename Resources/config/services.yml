services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.
    VideoGamesRecords\CoreBundle\:
        resource: '../../*'
        exclude: '../../{Admin,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
#    VideoGamesRecords\CoreBundle\Serializer\ChartContextBuilder:
#        decorates: 'api_platform.serializer.context_builder'
#        arguments: [ '@VideoGamesRecords\CoreBundle\Serializer\ChartContextBuilder.inner' ]
#        autoconfigure: false
#    VideoGamesRecords\CoreBundle\Doctrine\ChartExtension:
#        tags:
#            - { name: api_platform.doctrine.orm.query_extension.collection, priority: 9 }
#            - { name: api_platform.doctrine.orm.query_extension.item }
    VideoGamesRecords\CoreBundle\Command\ChartCommand:
        class: VideoGamesRecords\CoreBundle\Command\ChartCommand
        arguments: [null, '@doctrine.orm.entity_manager']
        public: true
        tags:
            - { name: 'console.command' }
    VideoGamesRecords\CoreBundle\Twig\VgrExtension:
        public: false
        tags:
            - { name: twig.extension }
    entity.event_listener.playerchart_update:
        class: VideoGamesRecords\CoreBundle\EventListener\Entity\PlayerChartUpdateListener
        tags:
            - { name: doctrine.event_listener, event: preUpdate, method: preUpdate}
            - { name: doctrine.event_listener, event: postUpdate, method: postUpdate}
    array_normalizer:
        class: Symfony\Component\Serializer\Normalizer\ArrayDenormalizer
        public: false
        tags: [serializer.normalizer]
    json_encoder:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder
        public: false
        tags: [serializer.encoder]
    vgr.game:
        class:    VideoGamesRecords\CoreBundle\Service\Game
        arguments: [
            "@=service('doctrine.orm.default_entity_manager')",
            "%kernel.root_dir%"
            ]
    playerChart.player_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { player: ~ } ]
        tags:  [ 'api_platform.filter' ]
        public: true
        autowire: true
        autoconfigure: false
    playerChart.chart_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { chart: ~ } ]
        tags:  [ 'api_platform.filter' ]
        public: true
        autowire: true
        autoconfigure: false
    game.status_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { status: ~ } ]
        tags:  [ 'api_platform.filter' ]
        public: true
        autowire: true
        autoconfigure: false
    platform_filter:
        parent: 'api_platform.doctrine.orm.search_filter'
        arguments: [ { platforms: ~ } ]
        tags:  [ 'api_platform.filter' ]
        public: true
        autowire: true
        autoconfigure: false
    vgr.playerChartValueSubscriber:
        class:  VideoGamesRecords\CoreBundle\EventSubscriber\PlayerChartValueSubscriber
        tags: [ { name: 'kernel.event_subscriber'} ]



