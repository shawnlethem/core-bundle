<?php

namespace VideoGamesRecords\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserGroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserGroupRepository extends EntityRepository
{
    /**
     * @param array $params idJeu|idLogin|limit|maxRank
     * @return array
     */
    public function getRankingPoints($params = array())
    {
        $query = $this->createQueryBuilder('ug')
            ->join('ug.user', 'u')
            ->addSelect('u') //----- for using ->getUser() on each result
            ->orderBy('ug.rank');

        $query->where('ug.idGroupe = :idGroupe')
            ->setParameter('idGroupe', $params['idGroupe']);

        if (array_key_exists('limit', $params)) {
            $query->setMaxResults($params['limit']);
        }

        if ( (array_key_exists('maxRank', $params)) && (array_key_exists('idLogin', $params)) ) {
            $query->andWhere('(ug.rank <= :maxRank OR ug.idMembre = :idLogin)')
                ->setParameter('maxRank', $params['maxRank'])
                ->setParameter('idLogin', $params['idLogin']);
        } else if (array_key_exists('maxRank', $params)) {
            $query->andWhere('ug.rank <= :maxRank')
                ->setParameter('maxRank', $params['maxRank']);
        }
        return $query->getQuery()->getResult();
    }


    /**
     * @param array $params idJeu|idLogin|limit|maxRank
     * @return array
     */
    public function getRankingMedals($params = array())
    {
        $query = $this->createQueryBuilder('ug')
            ->join('ug.user', 'u')
            ->addSelect('u') //----- for using ->getUser() on each result
            ->orderBy('ug.rankMedal');

        $query->where('ug.idGroupe = :idGroupe')
            ->setParameter('idGroupe', $params['idGroupe']);

        if (array_key_exists('limit', $params)) {
            $query->setMaxResults($params['limit']);
        }

        if ( (array_key_exists('maxRank', $params)) && (array_key_exists('idLogin', $params)) ) {
            $query->andWhere('(ug.rank <= :maxRank OR ug.idMembre = :idLogin)')
                ->setParameter('maxRank', $params['maxRank'])
                ->setParameter('idLogin', $params['idLogin']);
        } else if (array_key_exists('maxRank', $params)) {
            $query->andWhere('ug.rank <= :maxRank')
                ->setParameter('maxRank', $params['maxRank']);
        }
        return $query->getQuery()->getResult();
    }
}
